{"ast":null,"code":"var _jsxFileName = \"/Users/lizhizhuo/Documents/GitHub/DSCI560_project/Lab7/well-map/src/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { fromLonLat } from \"ol/proj\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport { Icon, Style } from \"ol/style\";\nimport Overlay from \"ol/Overlay\";\n\n// ðŸ”¹ Firebase REST API URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIREBASE_URL = \"https://wellmap-91f48-default-rtdb.firebaseio.com/.json\";\nconst MapComponent = () => {\n  _s();\n  const [wells, setWells] = useState([]);\n  const popupRef = useRef(null);\n  const closerRef = useRef(null);\n\n  // ðŸ”¹ Fetch data from Firebase\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(FIREBASE_URL);\n        const data = await response.json();\n        if (data) {\n          const wellsArray = Object.values(data).map((well, index) => ({\n            id: well.id || index,\n            // Unique ID\n            name: well.name || \"Unknown Well\",\n            lat: well.latitude !== undefined ? parseFloat(well.latitude) : null,\n            lon: well.longitude !== undefined ? parseFloat(well.longitude) : null,\n            details: `\n                <strong>API:</strong> ${well.api || \"N/A\"}<br/>\n                <strong>Formation:</strong> ${well.stimulated_formation || \"N/A\"}<br/>\n                <strong>Top Depth:</strong> ${well[\"top_(ft)\"] || \"N/A\"} ft<br/>\n                <strong>Bottom Depth:</strong> ${well[\"bottom_(ft)\"] || \"N/A\"} ft<br/>\n                <strong>Stages:</strong> ${well.stimulation_stages || \"N/A\"}<br/>\n                <strong>Volume:</strong> ${well.volume || \"N/A\"} ${well.volume_units || \"\"}<br/>\n                <strong>Details:</strong> ${well.details || \"No details available\"}\n              `\n          })).filter(well => well.lat !== null && well.lon !== null && !isNaN(well.lat) && !isNaN(well.lon));\n          console.log(\"Processed Wells Data (Validated):\", wellsArray);\n          setWells(wellsArray);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // ðŸ”¹ Load OpenLayers map\n  useEffect(() => {\n    if (wells.length === 0) return;\n    const map = new Map({\n      target: \"map\",\n      layers: [new TileLayer({\n        source: new OSM()\n      })],\n      view: new View({\n        center: fromLonLat([-103.731825, 48.109997]),\n        // Centered near first well\n        zoom: 6 // Adjust zoom level\n      })\n    });\n    console.log(\"Creating markers for wells:\", wells);\n\n    // ðŸ”¹ Create markers with large pin icons\n    const features = wells.map(well => {\n      console.log(`Adding marker for: ${well.name} at (${well.lat}, ${well.lon})`);\n      const feature = new Feature({\n        geometry: new Point(fromLonLat([well.lon, well.lat])),\n        name: well.name,\n        details: well.details || \"No details available\"\n      });\n      feature.setStyle(new Style({\n        image: new Icon({\n          src: \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n          // Large pin icon\n          scale: 1.2 // Increase marker size\n        })\n      }));\n      return feature;\n    });\n    const vectorLayer = new VectorLayer({\n      source: new VectorSource({\n        features\n      })\n    });\n    map.addLayer(vectorLayer);\n\n    // ðŸ”¹ Create popup\n    const overlay = new Overlay({\n      element: popupRef.current,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250\n      }\n    });\n    map.addOverlay(overlay);\n    if (closerRef.current) {\n      closerRef.current.onclick = function () {\n        overlay.setPosition(undefined);\n        closerRef.current.blur();\n        return false;\n      };\n    }\n\n    // ðŸ”¹ Show popup when clicking on a marker\n    map.on(\"singleclick\", function (evt) {\n      const feature = map.forEachFeatureAtPixel(evt.pixel, feature => feature);\n      if (feature) {\n        const coordinates = feature.getGeometry().getCoordinates();\n        const content = document.getElementById(\"popup-content\");\n        if (content) {\n          content.innerHTML = `<h3>${feature.get(\"name\")}</h3><p>${feature.get(\"details\")}</p>`;\n          overlay.setPosition(coordinates);\n        }\n      }\n    });\n    return () => map.setTarget(undefined);\n  }, [wells]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Well Locations Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: popupRef,\n      id: \"popup\",\n      className: \"ol-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        ref: closerRef,\n        id: \"popup-closer\",\n        className: \"ol-popup-closer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"popup-content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"G1PxhTXZ4CWSSh6POF+ZzxurV/U=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Map","View","TileLayer","OSM","Feature","Point","fromLonLat","VectorLayer","VectorSource","Icon","Style","Overlay","jsxDEV","_jsxDEV","FIREBASE_URL","MapComponent","_s","wells","setWells","popupRef","closerRef","fetchData","response","fetch","data","json","wellsArray","Object","values","map","well","index","id","name","lat","latitude","undefined","parseFloat","lon","longitude","details","api","stimulated_formation","stimulation_stages","volume","volume_units","filter","isNaN","console","log","error","length","target","layers","source","view","center","zoom","features","feature","geometry","setStyle","image","src","scale","vectorLayer","addLayer","overlay","element","current","autoPan","autoPanAnimation","duration","addOverlay","onclick","setPosition","blur","on","evt","forEachFeatureAtPixel","pixel","coordinates","getGeometry","getCoordinates","content","document","getElementById","innerHTML","get","setTarget","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","ref","className","href","_c","$RefreshReg$"],"sources":["/Users/lizhizhuo/Documents/GitHub/DSCI560_project/Lab7/well-map/src/MapComponent.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"ol/ol.css\";\nimport Map from \"ol/Map\";\nimport View from \"ol/View\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { fromLonLat } from \"ol/proj\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport { Icon, Style } from \"ol/style\";\nimport Overlay from \"ol/Overlay\";\n\n// ðŸ”¹ Firebase REST API URL\nconst FIREBASE_URL = \"https://wellmap-91f48-default-rtdb.firebaseio.com/.json\";\n\nconst MapComponent = () => {\n  const [wells, setWells] = useState([]);\n  const popupRef = useRef(null);\n  const closerRef = useRef(null);\n\n  // ðŸ”¹ Fetch data from Firebase\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(FIREBASE_URL);\n        const data = await response.json();\n\n        if (data) {\n          const wellsArray = Object.values(data)\n            .map((well, index) => ({\n              id: well.id || index, // Unique ID\n              name: well.name || \"Unknown Well\",\n              lat: well.latitude !== undefined ? parseFloat(well.latitude) : null,\n              lon: well.longitude !== undefined ? parseFloat(well.longitude) : null,\n              details: `\n                <strong>API:</strong> ${well.api || \"N/A\"}<br/>\n                <strong>Formation:</strong> ${well.stimulated_formation || \"N/A\"}<br/>\n                <strong>Top Depth:</strong> ${well[\"top_(ft)\"] || \"N/A\"} ft<br/>\n                <strong>Bottom Depth:</strong> ${well[\"bottom_(ft)\"] || \"N/A\"} ft<br/>\n                <strong>Stages:</strong> ${well.stimulation_stages || \"N/A\"}<br/>\n                <strong>Volume:</strong> ${well.volume || \"N/A\"} ${well.volume_units || \"\"}<br/>\n                <strong>Details:</strong> ${well.details || \"No details available\"}\n              `,\n            }))\n            .filter((well) => well.lat !== null && well.lon !== null && !isNaN(well.lat) && !isNaN(well.lon));\n\n          console.log(\"Processed Wells Data (Validated):\", wellsArray);\n          setWells(wellsArray);\n        }\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // ðŸ”¹ Load OpenLayers map\n  useEffect(() => {\n    if (wells.length === 0) return;\n\n    const map = new Map({\n      target: \"map\",\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([-103.731825, 48.109997]), // Centered near first well\n        zoom: 6, // Adjust zoom level\n      }),\n    });\n\n    console.log(\"Creating markers for wells:\", wells);\n\n    // ðŸ”¹ Create markers with large pin icons\n    const features = wells.map((well) => {\n      console.log(`Adding marker for: ${well.name} at (${well.lat}, ${well.lon})`);\n      const feature = new Feature({\n        geometry: new Point(fromLonLat([well.lon, well.lat])),\n        name: well.name,\n        details: well.details || \"No details available\",\n      });\n\n      feature.setStyle(\n        new Style({\n          image: new Icon({\n            src: \"https://maps.google.com/mapfiles/ms/icons/red-dot.png\", // Large pin icon\n            scale: 1.2, // Increase marker size\n          }),\n        })\n      );\n\n      return feature;\n    });\n\n    const vectorLayer = new VectorLayer({\n      source: new VectorSource({ features }),\n    });\n\n    map.addLayer(vectorLayer);\n\n    // ðŸ”¹ Create popup\n    const overlay = new Overlay({\n      element: popupRef.current,\n      autoPan: true,\n      autoPanAnimation: { duration: 250 },\n    });\n\n    map.addOverlay(overlay);\n\n    if (closerRef.current) {\n      closerRef.current.onclick = function () {\n        overlay.setPosition(undefined);\n        closerRef.current.blur();\n        return false;\n      };\n    }\n\n    // ðŸ”¹ Show popup when clicking on a marker\n    map.on(\"singleclick\", function (evt) {\n      const feature = map.forEachFeatureAtPixel(evt.pixel, (feature) => feature);\n      if (feature) {\n        const coordinates = feature.getGeometry().getCoordinates();\n        const content = document.getElementById(\"popup-content\");\n        if (content) {\n          content.innerHTML = `<h3>${feature.get(\"name\")}</h3><p>${feature.get(\"details\")}</p>`;\n          overlay.setPosition(coordinates);\n        }\n      }\n    });\n\n    return () => map.setTarget(undefined);\n  }, [wells]);\n\n  return (\n    <div>\n      <h2>Well Locations Map</h2>\n      <div id=\"map\" style={{ width: \"100%\", height: \"500px\" }}></div>\n      {/* ðŸ”¹ Popup */}\n      <div ref={popupRef} id=\"popup\" className=\"ol-popup\">\n        <a href=\"#\" ref={closerRef} id=\"popup-closer\" className=\"ol-popup-closer\"></a>\n        <div id=\"popup-content\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}